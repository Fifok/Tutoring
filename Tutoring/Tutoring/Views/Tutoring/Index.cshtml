@model Tutoring.Models.TutoringVM.IndexViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <h2 class="text-center">@Model.Title</h2>
    <hr />
    <div class="row">
        <dl class="col-10">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Teacher.Fullname)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Teacher.Fullname)
            </dd>
        </dl>
        <div class="col d-flex text-center align-items-center justify-content-center">
            @{
                var user = Context?.User?.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value;
            }
            @if (!Context.User.Identity.IsAuthenticated ||
             user != Model.Teacher.Email)
            {
                if (!Model.Students.Any(x => x.Email == user))
                {
                    <form asp-action="Participate" asp-route-id="@Context.Request.RouteValues["id"]">
                        <button class="btn btn-sm btn-primary">Participate</button>
                    </form>
                }
                else
                {
                    <form asp-action="Participate" asp-route-id="@Context.Request.RouteValues["id"]">
                        <button class="btn btn-sm btn-danger">Reject</button>
                    </form>
                }
            }
        </div>
    </div>


    <div class="row flex-column m-1 my-5 bg-warning bg-gradient rounded align-content-center">
        <h4 class="col-2 align-self-center text-center py-3">Lessons</h4>
        @if (Context.User.Identity.IsAuthenticated && Context.User.FindFirst(System.Security.Claims.ClaimTypes.Name).Value == Model.Teacher.Fullname)
        {
            <a class="col-2 align-self-center btn btn-sm btn-warning text-dark" asp-controller="Tutoring" asp-action="AddLesson" asp-route-tutoringId="@Context.Request.RouteValues["id"]">New Lesson</a>
        }
        <div class="col justify-content-center mx-1 my-3">
            <div class="list-group rounded">
                @if (Model.Lessons != null && Model.Lessons.Count() > 0)
                {
                    @for (int i = 0; i < Model.Lessons.Count(); i++)
                    {
                        var lesson = Model.Lessons.ElementAt(i);
                        <a asp-action="lesson" asp-controller="Tutoring" asp-route-tutoringId="@Context.Request.RouteValues["id"]" asp-route-lessonId="@lesson.Index"
                           class="list-group-item list-group-item-action list-group-item-warning text-center">
                            <div class="row">
                                <div class="col-1">@($"{i+1}.")</div>
                                <div class="col-9">@lesson.Title</div>
                                <div class="col-2">@lesson.Author.Fullname</div>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <div class="list-group-item list-group-item-warning text-center">
                        <p>No lessons in this tutoring</p>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row flex-column m-1 my-5 bg-warning bg-gradient rounded align-content-center">
        <h4 class="col-2 align-self-center text-center py-3">Students</h4>
        @*@if (Context.User.Identity.IsAuthenticated && Context.User.FindFirst(System.Security.Claims.ClaimTypes.Name).Value == Model.Teacher.Fullname)
            {
                <a class="col-2 align-self-center btn btn-sm btn-warning text-dark" asp-controller="Tutoring" asp-action="AddLesson" asp-route-tutoringId="@Context.Request.RouteValues["id"]">New Lesson</a>
            }*@
        <div class="col justify-content-center mx-1 my-3">
            <div class="list-group rounded">
                @if (Model.Students != null && Model.Students.Count() > 0)
                {
                    @for (int i = 0; i < Model.Students.Count(); i++)
                    {
                        var student = Model.Students.ElementAt(i);
                        <div class="list-group-item list-group-item-action list-group-item-warning text-center">
                            <div class="row">
                                <div class="col-1">@($"{i+1}.")</div>
                                <div class="col-10">@student.Fullname</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="list-group-item list-group-item-warning text-center">
                        <p>No students</p>
                    </div>
                }
            </div>
        </div>
    </div>

</div>

